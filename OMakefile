rootdir = $(dir .)

BUILDLIB	= $(rootdir)/tools/buildlib/buildlib.boot
CYCBISON	= $(rootdir)/tools/bison/cycbison.boot
CYCLEX		= $(rootdir)/tools/cyclex/cyclex.boot
CYCLONE		= $(rootdir)/tools/cyclone/cyclone.boot
ERRORGEN	= $(rootdir)/tools/errorgen/errorgen
STRINGIFY	= $(rootdir)/tools/stringify/stringify

LDFLAGS[] =
  -L$(rootdir)/library/stdlib
  -Wl,-rpath,$(absname $(rootdir)/library/stdlib)


########################################################################
############################## C compiler ##############################
########################################################################

CFLAGS[] =
  -m32
  -ggdb3
  -I$(rootdir)/library/stdlib
  -I$(rootdir)/library/stdlib/cyc-lib

.SCANNER: scan-%.c: %.c
  cc $(CFLAGS) $< -MM

%.o: %.c $(rootdir)/library/stdlib/cyc-lib/cyc_include.h :scanner: scan-%.c
  cc $(CFLAGS) $< -c -o $@


########################################################################
########################### Cyclone compiler ###########################
########################################################################

CYCFLAGS[] =
  -I$(rootdir)/include
  -I$(rootdir)/library/stdlib/libc

.SCANNER: scan-%.cyc: %.cyc
  cc -xc $(CYCFLAGS) $< -M -MT $(removesuffix $<).c

%.c: %.cyc $(CYCLONE) $(rootdir)/library/stdlib/cyc-lib/cycspecs :scanner: scan-%.cyc
  $(CYCLONE) $(CYCFLAGS) -stopafter-toc $< -o $@


########################################################################
########################### Code generation ############################
########################################################################

%.cyc: %.cyl $(CYCLEX)
  $(CYCLEX) $< $@

%_tab.cyc %_tab.h: %.cyy $(CYCBISON)
  $(CYCBISON) -d $< -o $*.cyc

%_gen.h: %.err.cyc $(ERRORGEN) $(CYCLONE)
  $(ERRORGEN) -c $(CYCLONE) $< > $@

%.string.cyc: % $(STRINGIFY)
  $(STRINGIFY) $< > $@


########################################################################
############################## Boot stuff ##############################
########################################################################

bootname (name) =
  value $(addprefix $(rootdir)/boot/$(fullname .)/,$(name))

boot () =
  boot-dirs = $(bootname $(set $(dirname $(OBJECTS))))

  boot: $(addsuffix .c, $(removesuffix $(OBJECTS)))
    #rm -rf $(boot-dirs)
    foreach (source => ..., $^):
      target = $(bootname $(source))
      mkdir -p $(dirname $(target))
      cp $(source) $(target)

.PHONY: boot

.SUBDIRS: $(subdirs PC, boot)
  value

########################################################################

.PHONY: check

.SUBDIRS: library tools testsuite

########################################################################

.PHONY: clean

clean:
  rm $(filter-proper-targets $(find $(rootdir) -name *))
