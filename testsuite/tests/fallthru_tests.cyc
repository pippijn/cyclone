#include <core.h>

char f1(char c) {
  switch(c) {
  case 'D': fallthru;
  case 'A': fallthru();
  case 'N': return '!';
  default:  return c;
  }
}

datatype Foo { Bar; Baz(int); };

int f2(datatype Foo @y) {
  int z = 3; // definite assignment will be smarter later
  switch(y) {
  case &Bar:    fallthru(7);
  case &Baz(x): z = x; break;
  }
  return z;
}

datatype Quux { Pair1(int,int), Pair2(int,int) };

bool b = true;

int f3(datatype Quux @q) {
  switch(q) {
  case &Pair1(x,y): if (b) fallthru(y,x); return 0;
  case &Pair2(x,y): return x-y;
  }
}

datatype X { Y(int,bool), Z(bool,int) };

void f4(datatype X @x) {
  switch (x) {
  case &Y(i,b): fallthru(b,i);
  case &Z(b,i): return;
  }
}

int main () { return 0; }
